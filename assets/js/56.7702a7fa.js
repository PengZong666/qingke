(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{405:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote"),t._v(" "),a("p",[t._v("前面已经知道了：")]),t._v(" "),a("ul",[a("li",[t._v("registerBeanPostProcessors(beanFactory); 注册bean的后置处理器来方便拦截bean的创建。")]),t._v(" "),a("li",[t._v("finishBeanFactoryInitialization(beanFactory); 完成BeanFactory初始化工作，创建剩下的单实例bean。")]),t._v(" "),a("li",[t._v("后置处理器会创建cglib的动态代理。")]),t._v(" "),a("li",[t._v("this.advised.getInterceptorsAndDynamicInterceptionAdvice(method, targetClass); 获取拦截器链。")])]),t._v(" "),a("p",[t._v("下面来看一下，这个拦截器链是如何执行的！我们进入我们的proceed方法：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/pengzong888/imageSource/raw/master/img/2022/2/image-20220207213847384.png",alt:"image-20220207213847384"}})]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("proceed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We start with an index of -1 and increment early.")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentInterceptorIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptorsAndDynamicMethodMatchers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeJoinpoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" interceptorOrInterceptionAdvice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptorsAndDynamicMethodMatchers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentInterceptorIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interceptorOrInterceptionAdvice "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterceptorAndDynamicMethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Evaluate dynamic method matcher here: static part will already have")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// been evaluated and found to match.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterceptorAndDynamicMethodMatcher")]),t._v(" dm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterceptorAndDynamicMethodMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" interceptorOrInterceptionAdvice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("methodMatcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("targetClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dynamic matching failed.")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Skip this interceptor and invoke the next in the chain.")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("proceed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It's an interceptor, so we just invoke it: The pointcut will have")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// been evaluated statically before this object was constructed.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodInterceptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" interceptorOrInterceptionAdvice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在这里面，首先会判断：当前的索引是不是跟拦截器链的大小减一是一样的。而这个索引我们跳转到它的定义处可以看到，默认是-1的。所以在这里，需要用拦截器链的大小减一。那么，如果没有拦截器或者指定到来最后一个拦截器，就会直接执行目标方法。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/pengzong888/imageSource/raw/master/img/2022/2/image-20220207214010529.png",alt:"image-20220207214010529"}})]),t._v(" "),a("p",[t._v("接着，它会获取到当前的拦截器，第一个是默认的拦截器，不执行操作：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/pengzong888/imageSource/raw/master/img/2022/2/image-20220207214706280.png",alt:"image-20220207214706280"}})]),t._v(" "),a("p",[t._v("需要注意的是，这里使用了前加加，来让索引自增，是拦截器链能往下走。")]),t._v(" "),a("p",[t._v("接着来到我们的返回通知：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/pengzong888/imageSource/raw/master/img/2022/2/image-20220207214904487.png",alt:"image-20220207214904487"}})]),t._v(" "),a("p",[t._v("然后执行invoke方法：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/pengzong888/imageSource/raw/master/img/2022/2/image-20220207214940867.png",alt:"image-20220207214940867"}})]),t._v(" "),a("p",[t._v("接着是我们的后置通知，然后执行invoke方法；")]),t._v(" "),a("p",[t._v("然后是前置通知，然后执行invoke方法；")]),t._v(" "),a("p",[t._v("然后会执行目标方法：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/pengzong888/imageSource/raw/master/img/2022/2/image-20220207215259049.png",alt:"image-20220207215259049"}})]),t._v(" "),a("p",[t._v("目标方法执行完后，又会按照拦截器链相反的顺序一层层进行回调。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/pengzong888/imageSource/raw/master/img/2022/2/image-20220207220925290.png",alt:"image-20220207220925290"}})]),t._v(" "),a("p",[t._v("总的来说，就是"),a("strong",[t._v("链式获取每一个拦截器，拦截器执行invoke方法，每一个拦截器等待下一个拦截器执行完成返回以后再来执行。拦截器链的机制，保证通知方法于目标方法的执行顺序")]),t._v(".")]),t._v(" "),a("ul",[a("li",[t._v("正常执行：前置通知-》目标方法-》后置通知-》返回通知")]),t._v(" "),a("li",[t._v("出现异常：前置通知-》目标方法-》后置通知-》异常通知")])]),t._v(" "),a("blockquote")])}),[],!1,null,null,null);a.default=e.exports}}]);