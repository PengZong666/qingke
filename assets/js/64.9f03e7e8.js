(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{414:function(e,s,a){"use strict";a.r(s);var t=a(14),r=Object(t.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"_7、【初始化messagesource组件-做国际化功能-消息绑定、消息解析-】initmessagesource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、【初始化messagesource组件-做国际化功能-消息绑定、消息解析-】initmessagesource"}},[e._v("#")]),e._v(" 7、【初始化MessageSource组件（做国际化功能：消息绑定、消息解析）】initMessageSource();")]),e._v(" "),s("blockquote",[s("ul",[s("li",[e._v("1、ConfigurableListableBeanFactory beanFactory = getBeanFactory(); 获取BeanFactory")]),e._v(" "),s("li",[e._v("2、看容器中是否有id为messageSource的组件\n如果有，赋值给messageSource属性；如果没有，自己创建一个DelegatingMessageSource\nMessageSource：取出国际化配置文件中某个key的值，能按照区域信息获取")]),e._v(" "),s("li",[e._v("3、把创建好的MessageSource注册到容器中，以后获取国际化配置文件的时候，可以自动注入MessageSource\nbeanFactory.registerSingleton(MESSAGE_SOURCE_BEAN_NAME, this.messageSource);\nMessageSource.String getMessage(String code, Object[] args, String defaultMessage, Locale locale);")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);